FROM ubuntu:22.04

ENV DEBIAN_FRONTEND=noninteractive
ENV PATH="/home/coder/.cargo/bin:${PATH}"

# Install base dependencies
RUN apt-get update && apt-get install -y \
  curl wget git sudo unzip gnupg \
  libx11-dev libxkbfile-dev libsecret-1-dev \
  libssl-dev pkg-config zlib1g-dev \
  build-essential ca-certificates \
  software-properties-common \
  net-tools && \
  rm -rf /var/lib/apt/lists/*

# Install Node.js v18
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - && \
    apt-get install -y nodejs && \
    npm install -g npm




# Install Rust
RUN curl https://sh.rustup.rs -sSf | bash -s -- -y && \
    echo 'source $HOME/.cargo/env' >> /etc/bash.bashrc

# Install DFX CLI
RUN curl -LO https://github.com/dfinity/sdk/releases/download/0.28.0/dfx-0.28.0-x86_64-linux.tar.gz && \
    tar -xvzf dfx-0.28.0-x86_64-linux.tar.gz && \
    chmod +x dfx && mv dfx /usr/local/bin/dfx && \
    rm -f dfx-0.28.0-x86_64-linux.tar.gz
# Create non-root user
RUN useradd -m coder && echo "coder ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers
USER coder
WORKDIR /home/coder

# Create default DFX identity
RUN dfx identity new icpad_identity --disable-encryption || true && \
    dfx identity use icpad_identity

# Create DFX project
RUN dfx new ICP_project --type rust --frontend react && \
    rm -rf ICP_project/.git && \
    # echo "// Auto-generated by Docker\nactor Main { }" > ICP_project/src/ICP_project_frontend/src/lib.rs && \
    chown -R coder:coder ICP_project

WORKDIR /home/coder/ICP_project

EXPOSE 8000 8080 4932 3000

# Keep container alive with DFX running in foreground
CMD ["sh", "-c", "dfx start --background && tail -f /dev/null"]
